<?php defined('BASEPATH') OR exit('No direct script access allowed');
  class enidmodel extends CI_Model {
    function __construct(){      
        parent::__construct();        
        $this->load->database();
    }
    private function update( , $data =[] , $params_where =[] , $limit =1 ){
    
      foreach ($params_where as $key => $value) {
              $this->db->where($key , $value);
      }
      $this->db->limit($limit);
      return $this->db->update($table, $data);
    
    }
    private function get( $params=[], $params_where =[] , $limit =1){
        $params = implode(",", $params);
        $this->db->limit($limit);
        $this->db->select($params);
        foreach ($params_where as $key => $value) {
            $this->db->where($key , $value);
        }
        return $this->db->get($table)->result_array();
    }
    /*
    function set_pass($param){

        $mail         =  trim($param["mail"]); 
        $new_pass     =  RandomString(); 
        $query_update =  "UPDATE usuario SET password = '".sha1($new_pass)."' WHERE email = '".$mail."' LIMIT 1 ";
        
        $status_send= $this->db->query($query_update); 
        $data["new_pass"]= $new_pass;
        $data["status_send"] = $status_send; 
        $data["mail"] =  $param["mail"];
        return $data;
    }
    */
    

    /*
    function get_perfiles_disponibles($id_perfil){
        
        $where =""; 
        switch ($id_perfil){
          
          case 4:
            $where =" WHERE usuario_prueba =  1"; 
            break;
          
          default:
                      
            break;
        }
        $query_get ="SELECT * FROM perfil " .$where .  " ORDER BY nombreperfil ASC";
        $result = $this->db->query($query_get);
        return $result->result_array();
    }
    
    function getperfildata($id_usuario){
        $query_get ="SELECT 
                    p.idperfil , 
                    p.nombreperfil , 
                    p.descripcion 
                    FROM perfil AS p , 
                    usuario_perfil AS up 
                    WHERE  
                    up.idperfil = p.idperfil 
                    AND up.idusuario = $id_usuario  
                    AND  up.status =  1 LIMIT 1";
                    
        $result_user = $this->db->query($query_get);       
        return $result_user ->result_array();      
    }
    
    
    
    
    function validauserrecord($mail , $secret){
        $query_select ="SELECT * FROM usuario WHERE email='".$mail."' AND password ='".$secret."' limit 1";
        $result_user = $this->db->query($query_select);       
        return $result_user ->result_array();      
    }
    
    function get_empresa_permiso($id_empresa){
      $query_get =  "SELECT idpermiso FROM empresa_permiso WHERE  idempresa =  '".$id_empresa."' LIMIT 15 ";
      $result =  $this->db->query($query_get);
      return $result->result_array();
    }
    function get_empresa_recurso($id_empresa){
      $query_get =  "SELECT idrecurso FROM empresa_recurso WHERE  idempresa =  '".$id_empresa."' LIMIT 15 ";
      $result =  $this->db->query($query_get);
      return $result->result_array();
    }
    
    function get_reporte_general_mail_marketing($param){

        $query_get = "select 
                  u.nombre nombre_user ,
                  u.email ,  
                  p.fecha_registro , 
                  pu.nombre publicidad , 
                  pu.descripcion , 
                  pu.nombre  tipo_publicidad  
                  from  usuario_mensaje_publicidad p 
                  inner join usuario u on u.idusuario =  p.idusuario 
                  inner join publicidad pu on p.id_publicidad =  pu.id_publicidad 
                  inner join  tipo_publicidad t  on  pu.id_tipo_publicidad=  t.id_tipo_publicidad 
                  WHERE pu.id_tipo_publicidad = '".$param["tipo"]."' ORDER BY  p.fecha_registro desc ";

        $result =  $this->db->query($query_get);            
        return   $result->result_array();            
                  
    }
    
    function get_bugs(){

      $query_get =  "
      SELECT       
      i.descripcion_incidencia  ,    
      count(0) incidencias,       
      ti.tipo_incidencia  ,
      c.nombre        ,
      i.pagina_error  ,      
      i.tipo_propuesta        
      FROM incidencia i 
      INNER JOIN tipo_incidencia  ti 
      ON i.idtipo_incidencia = ti.idtipo_incidencia
      INNER JOIN  calificacion c 
      ON  i.idcalificacion =  c.idcalificacion
      WHERE i.status = 1 AND  DATE(i.fecha_registro) BETWEEN DATE_ADD(CURRENT_DATE() , INTERVAL -1 MONTH ) AND  DATE(CURRENT_DATE())
      GROUP BY i.descripcion_incidencia
      ORDER BY incidencias DESC ";

      $result = $this->db->query($query_get);
      return $result->result_array();


    }
    
    function get_nuevos_miembros(){

      $_num =  get_random();
      $this->create_table_tmp_miembros($_num , 0 );

      $this->create_table_tmp_miembros_complate($_num , 0);

          $query_get = "SELECT * FROM tmp_table_miembros_$_num";        
          $result = $this->db->query($query_get);
          $data_complete["resumen"] =  $result->result_array();

          


          $query_get = "SELECT  
                        u.idusuario           , 
                    u.nombre              , 
                    u.email                     , 
                    u.fecha_registro                  , 
                    u.puesto              , 
                    u.status              , 
                    u.apellido_paterno    , 
                    u.apellido_materno    , 
                    u.email_alterno       , 
                    u.tel_contacto        , 
                    u.tel_contacto_alterno, 
                    u.edad                      , 
                    u.cargo               , 
                    u.url_fb              , 
                    u.url_tw              , 
                    u.url_www             , 
                    u.sexo                   
                        FROM  tmp_table_miembros_c_$_num e 
          INNER JOIN usuario u ON  e.idempresa =  u.idusuario";
          $result = $this->db->query($query_get); 
          $data_complete["completa"] =  $result->result_array();




          
      $this->create_table_tmp_miembros_complate($_num , 1);
      $this->create_table_tmp_miembros($_num , 1 );
      return $data_complete;
    }
    
    function create_table_tmp_miembros($_num , $flag){

      $query_drop = get_drop("tmp_table_miembros_$_num");
      $response = $this->db->query($query_drop);
      
      if($flag == 0 ) {
        
        $query_create = "CREATE TABLE tmp_table_miembros_$_num 
        AS 
        SELECT DATE(fecha_registro) fecha_registro  , count(0)registrados  FROM empresa WHERE  status =  5 AND DATE(fecha_registro) 
        BETWEEN DATE_ADD(CURRENT_DATE()  , INTERVAL - 1 MONTH ) AND DATE(CURRENT_DATE()) GROUP BY DATE(fecha_registro) ";

        $this->db->query($query_create);
      }
      return $response;

    }
    function create_table_tmp_miembros_complate($_num , $flag){

      $query_drop = "DROP TABLE IF exists tmp_table_miembros_c_$_num";
      $response = $this->db->query($query_drop);
      
      if($flag == 0 ) {
        
        $query_create = "CREATE TABLE tmp_table_miembros_c_$_num 
        AS 
        SELECT idempresa   FROM empresa WHERE  status =  5 AND DATE(fecha_registro) 
        BETWEEN DATE_ADD(CURRENT_DATE()  , INTERVAL - 1 MONTH ) AND DATE(CURRENT_DATE()) GROUP BY idempresa ";

        $this->db->query($query_create);
      }
      return $response;

    }

    function get_dispositivos_dia(){

       $query_get = "SELECT 
                  dispositivo , COUNT(0)accesos    
                  FROM pagina_web 
                  WHERE DATE(fecha_registro) =  DATE(CURRENT_DATE() ) 
                  GROUP  BY dispositivo ORDER BY accesos DESC";


      $result =  $this->db->query($query_get);            
      return $result->result_array();
    }
    
    function get_sitios_dia(){

      $query_get = "SELECT 
                  url , COUNT(0)accesos    
                  FROM pagina_web 
                  WHERE DATE(fecha_registro) =  DATE(CURRENT_DATE() ) 
                  GROUP  BY url ORDER BY accesos DESC";


      $result =  $this->db->query($query_get);            
      return $result->result_array();
    }    
    
    function get_visitas_unicas_dia_enid($_num){

      $query_get ="
      select 
      count(*)accesos , 
      count(distinct(ip))ip ,
      count(distinct(url))sitios   ,
      count(distinct(dispositivo))dispositivos   
      from tmp_landing_$_num WHERE f_registro =  DATE(CURRENT_DATE() )";

      $result = $this->db->query($query_get);
      return $result->result_array();
    }
    
    
    
    function create_tmp_langings($_num ,  $flag ){

      $query_drop = "DROP TABLE IF exists tmp_landing_$_num";  
      $response = $this->db->query($query_drop);

      if ($flag == 0 ){
        $query_create = "CREATE TABLE tmp_landing_$_num AS
                         SELECT * , date(fecha_registro) f_registro FROM pagina_web 
                         WHERE DATE(fecha_registro )
                         BETWEEN DATE_ADD(CURRENT_DATE() , INTERVAL - 1 WEEK ) 
                         AND  DATE(CURRENT_DATE())";  
        $response =  $this->db->query($query_create);
      }
      return $response;

    }
    
    function registra_acceso_pagina_web($url , $ip , $dispositivo ,  $tipo  ){

      $query_insert =  "INSERT INTO pagina_web(
                        url,             
                        ip ,              
                        dispositivo , 
                        tipo )
                        VALUES( '".$url."'  , '".$ip."'  , '".$dispositivo."'  , '". $tipo ."' )"; 
      $this->db->query($query_insert);
    }


    
    

    
    function create_organizaciones_prospecto($_num , $flag){

        $query_drop =  "DROP TABLE IF exists tmp_emp_prospecto_$_num";
        $response = $this->db->query($query_drop);

        if ($flag == 0 ){
          
          $query_create =  "CREATE TABLE tmp_emp_prospecto_$_num AS  
                            SELECT 
                            idempresa  ,     
                            nombreempresa ,   
                            idCountry      , 
                            fecha_registro 
                            FROM empresa WHERE status =  1"; 
          $response =  $this->db->query($query_create);

        }
        return $response;
    }
    
    function get_imagen($id_imagen ){

        $query_get =  "SELECT * FROM imagen WHERE idimagen = $id_imagen LIMIT 1"; 
        $result  =  $this->db->query($query_get);
        return $result->result_array();


    }
    
    function get_tipo_publicidad(){

        $query_get =  "SELECT * FROM tipo_publicidad WHERE status = 1";
        $result  = $this->db->query($query_get);
        return $result->result_array();
    }
    
    function reporta_error($param){

      $descripcion = $param["descripcion"];
      $query_insert =  "INSERT INTO 
                        incidencia(descripcion_incidencia , 
                          idtipo_incidencia , 
                          idcalificacion ,  
                          id_user ) 
                        VALUES('".$descripcion ."' , 4 ,  1 , 1)";
      return  $this->db->query($query_insert);                  
    }
    

    
    function get_info_prospectos_e($param){

      $_num =  get_random();
        $this->create_tmp_semana_p($_num , 0, $param);
        $this->create_tmp_event_p($_num , 0, $param);
        $query_get =  "";
          switch ($param["periodo"]) {
            case 'semana':        

                $query_get =  "SELECT e.*  FROM tmp_1week_prospectos_$_num em
                INNER JOIN tmp_1week_prospectos_e$_num e 
                 ON  em.idempresa =  e.idempresa 
                WHERE date(em.fecha_registro) = DATE(CURRENT_DATE() -7)";
              break;
            case 'ayer':
                    $query_get =  "SELECT e.*  FROM tmp_1week_prospectos_$_num em
                INNER JOIN tmp_1week_prospectos_e$_num e 
                 ON  em.idempresa =  e.idempresa 
                WHERE date(em.fecha_registro) = DATE(CURRENT_DATE() -1)";
              break;
            case 'hoy':
                    $query_get =  "SELECT e.*  FROM tmp_1week_prospectos_$_num em
                INNER JOIN tmp_1week_prospectos_e$_num e 
                 ON  em.idempresa =  e.idempresa 
                WHERE date(em.fecha_registro) = DATE(CURRENT_DATE())";
              break;
            default:            
              break;
          }

        $result =  $this->db->query($query_get);
        $data_complete =  $result->result_array();
        $this->create_tmp_event_p($_num , 1, $param);
        $this->create_tmp_semana_p($_num , 1, $param);

        return $data_complete;
        

    } 
    
   
            

    
    function get_info_prospectos($param){
        
        $_num =  get_random();
        $this->create_tmp_semana_p($_num , 0, $param);
        $query_get =  "";
          switch ($param["periodo"]) {
            case 'semana':        
                $query_get =  "SELECT * FROM tmp_1week_prospectos_$_num WHERE date(fecha_registro) = DATE(CURRENT_DATE() -7) ";
              break;
            case 'ayer':
                $query_get =  "SELECT * FROM tmp_1week_prospectos_$_num WHERE date(fecha_registro) = DATE(CURRENT_DATE() -1) ";
              break;
            case 'hoy':
                $query_get =  "SELECT * FROM tmp_1week_prospectos_$_num WHERE date(fecha_registro) = DATE(CURRENT_DATE())";
              break;
            default:            
              break;
          }

        $result =  $this->db->query($query_get);
        $data_complete =  $result->result_array();
        $this->create_tmp_semana_p($_num , 1, $param);
        return $data_complete;
        


    }    
    
    
    
    
    function miemtros_cuenta($param){

      $query_get =  "
                    SELECT 
                      idusuario           , 
                      nombre              , 
                      email                     , 
                      fecha_registro                  , 
                      puesto              , 
                      status              , 
                      apellido_paterno    , 
                      apellido_materno    , 
                      email_alterno       , 
                      tel_contacto        , 
                      tel_contacto_alterno, 
                      edad                      , 
                      cargo               , 
                      url_fb              , 
                      url_tw              , 
                      url_www             , 
                      sexo                     
                    FROM usuario WHERE idempresa =  '".$param["id_empresa"]."'  LIMIT  5";  
                  $result =   $this->db->query($query_get);
                  return $result->result_array();
    }

    
    
    function create_tmp_2week($_num ,  $flag ){
       
      $query_drop =  "DROP TABLE IF exists tmp_2week_$_num";
      $response =  $this->db->query($query_drop);

        if ($flag == 0){
            $query_create =  "CREATE TABLE tmp_2week_$_num AS 
                              SELECT 
                              idempresa  ,  
                              fecha_registro , 
                              sum(case when  date(fecha_registro) = CURRENT_DATE() THEN 1 ELSE 0 END   )empresa_dia,
                              sum(case when  date(fecha_registro) = CURRENT_DATE() -1 THEN 2 ELSE 0 END   )empresa_ayer,
                              sum(case when  date(fecha_registro) = DATE(CURRENT_DATE() -7) THEN 3 ELSE 0 END   )empresa_week
                              FROM  empresa 
                              WHERE 
                              status = 1 AND 
                              date(fecha_registro) 
                              BETWEEN DATE_ADD(CURRENT_DATE() ,  INTERVAL -1 WEEK )
                              AND CURRENT_DATE() GROUP BY idempresa";  
            $response = $this->db->query($query_create);                  
        }
        return $response;
    }
    

    
    function verifica_estatus_prospecto($param){

      $query_get =  "SELECT password_prospecto 
                            FROM usuario 
                            WHERE email =  '".$param["mail_user"]."' LIMIT 1";
      $result =  $this->db->query($query_get);
      $num_mail =  $result->result_array()[0]["password_prospecto"];
      $data["mail_prospecto"] =1; 
      if ($num_mail == 0 ){
          $data["mail_prospecto"] =0;
          $new_pass =  RandomString();
          $data["new_pass"] =  $new_pass;

          $query_update =  "UPDATE usuario SET password_prospecto = 1 ,  password = '".sha1($new_pass)."'  WHERE email =  '".$param["mail_user"]."' LIMIT 1   ";
          $data["estatus_pass"]=  $this->db->query($query_update);

      }
      return $data;
    }
    
    
    
    
    function create_tmps_miembros($_num , $flag ){

        $query_drop =  "DROP TABLE IF exists tmp_prospectos_miembro_$_num"; 
        $response=  $this->db->query($query_drop);
        
        
        if ($flag == 0 ){
            $query_create =  "CREATE TABLE tmp_prospectos_miembro_$_num AS 
                              SELECT  e.idempresa, COUNT(0)miembros FROM usuario u  
                              INNER JOIN tmp_prospectos_$_num e ON u.idempresa =  e.idempresa group by e.idempresa;";  
                              $response = $this->db->query($query_create );                              
        }
        return $response;
        
    }
    
    
   
    
    function create_tmps_info_empresa($_num , $flag , $param){
      $flag_action = "";  
      $query_drop =  "DROP TABLE IF exists tmp_prospectos_$_num";
      $flag_action =   $this->db->query($query_drop); 


      if ($flag == 0 ){

          $query_procedure ="CREATE TABLE   tmp_prospectos_$_num AS SELECT 
                  idempresa,  
                  nombreempresa , 
                  fecha_registro ,  
                  facebook , 
                  tweeter , 
                  gp , 
                  www ,  
                  datediff( CURRENT_DATE() , fecha_registro) dias_dif
                  FROM empresa 
                  WHERE  
                  status = 1 ORDER BY fecha_registro DESC"; 
          
          $flag_action =  $this->db->query($query_procedure);

      }

      return $flag_action;

    }
    
    function display_recursos_by_perfiles($perfiles){

        $b = 0;
        $data_info = array();
        $datacompleto = array();
        

        $idperfil = $perfiles[0]["idperfil"];
                        $query_get ="SELECT
                                        r.nombre , 
                                        r.urlpaginaweb , 
                                        r.iconorecurso, 
                                        r.descripcionrecurso , 
                                        pr.idrecurso 
                                        FROM recurso  r INNER JOIN 
                                        perfil_recurso  pr
                                        ON  r.idrecurso  =  pr.idrecurso 
                                        WHERE 
                                        r.idrecurso = pr.idrecurso AND 
                                        pr.idperfil = $idperfil  
                                        ORDER BY order_negocio ASC"; 

            $result = $this->db->query($query_get);  
            $data  = $result ->result_array();
            
            for ($i=0; $i <  count($data); $i++) {                             
                if (!in_array( $data[$i], $data_info)){
                    $data_info[$b] = $data[$i];
                    $b++;                    
                }
            }
            
            
            
            $datacompleto = $data_info;
            foreach ($perfiles as $row){

                $id_perfil_actual = $row["idperfil"];
                
                        
                        for ($a=0; $a < count($datacompleto); $a++) { 
                            
                            $idrecursoactual= $datacompleto[$a]["idrecurso"];   
                            
                                                    
                            if ($idrecursoactual != "") {
                                    

                                $sub_paginas_query = "SELECT  
                                                    p.nombrepermiso , 
                                                    p.urlpaginaweb ,
                                                    p.iconpermiso, 
                                                    p.descripcionpermiso 
                                                    FROM permiso AS p , perfil_permiso AS pp  
                                                    WHERE  pp.idpermiso = p.idpermiso AND 
                                                    pp.idperfil = $id_perfil_actual AND 
                                                    p.idrecurso = $idrecursoactual LIMIT 5";

                                $resultsubpaginas  = $this->db->query($sub_paginas_query);  
                                $datasubpaginas   = $resultsubpaginas ->result_array();
                                $datacompleto[$a]["subpaginas"] = $datasubpaginas; 

                            }
        
                        }                    
            }
            return $datacompleto;

        }
      */

}