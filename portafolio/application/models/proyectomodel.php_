<?php defined('BASEPATH') OR exit('No direct script access allowed');
class proyectomodel extends CI_Model{
  function __construct(){
      parent::__construct();        
      $this->load->database();
  } 
  private function q_get($params=[], $id){
        return $this->get("servicio", $params, ["id_servicio" => $id ] );
  }
  function q_up($q , $q2 , $id_usuario){
        return $this->update("servicio" , [$q => $q2 ] , ["idusuario" => $id_usuario ]);
  }
  private function update( , $data =[] , $params_where =[] , $limit =1 ){
    
      foreach ($params_where as $key => $value) {
              $this->db->where($key , $value);
      }
      $this->db->limit($limit);
      return $this->db->update($table, $data);
    
  }
  private function insert( $params , $return_id=0){        
        $insert   = $this->db->insert($tabla, $params);     
        return ($return_id ==  1) ? $this->db->insert_id() : $insert;
  }
  private function get( $params=[], $params_where =[] , $limit =1){
        $params = implode(",", $params);
        $this->db->limit($limit);
        $this->db->select($params);
        foreach ($params_where as $key => $value) {
            $this->db->where($key , $value);
        }
        return $this->db->get($table)->result_array();
  }
  /*
  function verifica_direccion_envio_proyecto_persona_forma_pago($param){
      
      
      if(count($info) > 0){        
        $param["id_direccion"] =  $info[0]["id_direccion"];
        return $this->get_data_direccion($param);
      }else{
        return $info;
      }       
  }
  */
  
  
  function delete($table ='imagen' , $params_where = [] , $limit = 1){

        $this->db->limit($limit);
        //where($key, $value = NULL, $escape = NULL);
        return $this->db->delete($table,  $params_where);
    }
    /*
    
  */
  
  
  /*
  function registra_direccion_usuario($param){
    
    $id_codigo_postal =  $this->get_id_codigo_postal_por_patron($param);
    $param["id_codigo_postal"] =  $id_codigo_postal;  
    return  $this->crea_direccion($param);
    
  } 
  */   
  
  /*
  
  */
  /*
  function get_videos($param){

 
      $query_get =  "SELECT 
                    id_servicio ,
                    nombre_servicio  ,  
                    url_vide_youtube , 
                    url_video_facebook
                    FROM 
                    servicio 
                    WHERE url_vide_youtube
                    IS NOT NULL
                    ORDER BY id_servicio 
                    DESC
                    LIMIT 5 "; 
    
    $result =  $this->db->query($query_get);
    return $result->result_array();

  }
  
  
  
  
  

  
  
  

  
  function get_delegaciones($param){

    $id_codigo_postal =  $param["id_codigo_postal"];  
    $query_get = "SELECT 
                  m.* 
                  FROM  
                  codigo_postal c  INNER JOIN municipio m ON c.id_municipio =  m.id_municipio 
                  WHERE c.id_codigo_postal =  $id_codigo_postal";

    $result =  $this->db->query($query_get);
    $delegaciones =  $result->result_array();
    return $delegaciones;
  }
  
  
  
  
  
  
  
  function get_ultimo_pago_servicio($param){
    
      $id_proyecto_persona =  $param["id_proyecto_persona"];
      $query_get ="select  
                      * 
                   from 
                   proyecto_persona_forma_pago 
                   where 
                   id_proyecto_persona = '".$id_proyecto_persona."'
                    order by 
                   fecha_registro 
                   desc limit 1";

      $result = $this->db->query($query_get);
      return $result->result_array();    
  }
  
  function get_proyecto_persona_info_renovacion($param){

    $id_proyecto_persona =  $param["id_proyecto_persona"];
    $query_get ="SELECT * FROM 
                    proyecto_persona 
                 WHERE 
                  id_proyecto_persona = $id_proyecto_persona
                 LIMIT 1 ";

    $result = $this->db->query($query_get);
    return $result->result_array();
  }
  
  function get_proyecto_by_id($id_proyecto){

    $query_get =  "SELECT * FROM proyecto WHERE id_proyecto = '".$id_proyecto."' LIMIT 1 ";
    $result = $this->db->query($query_get);
    return $result->result_array(); 
    
  }
  
  function update_info_proyecto($param){

    
    $proyecto      =  $param["proyecto"];
    $id_servicio      =  $param["id_servicio"];
    $status      =  $param["status"];
    $url      =  $param["url"];
    $id_proyecto      =  $param["id_proyecto"];
    $url_img      =      $param["url_img"];
    

    $query_update ="UPDATE proyecto 
                      SET 
                        proyecto = '".$proyecto ."' ,                                               
                        url = '".$url ."'            ,                                    
                        url_img = '".$url_img ."'     ,  
                        status = '". $status ."' , 
                        id_servicio  = '".$id_servicio."'  
                      WHERE id_proyecto = '".$id_proyecto ."'  
                      LIMIT 1 ";
    
    return $this->db->query($query_update);
  }
  
  function get_servicios(){

    $query_get = "SELECT * FROM servicio";
    $result = $this->db->query($query_get);
    return $result->result_array();
  }
  
  function get_info_proyecto($param){

    $query_get ="SELECT 
                  p.* , 
                  s.nombre_servicio
                FROM proyecto p                   
                  INNER JOIN 
                  servicio s
                  ON p.id_servicio =  s.id_servicio
                WHERE 
                id_proyecto = '".$param["id_proyecto"]."' 
                LIMIT 1";
    $result =  $this->db->query($query_get);
    return $result->result_array();
  }
  
  function get_proyectos_pendientes_publicar($param){

      $query_get = "SELECT 
                    p.* ,
                    s.nombre_servicio
                    FROM 
                      proyecto p                 
                    INNER JOIN
                      servicio s 
                      ON 
                      p.id_servicio = s.id_servicio  
                    WHERE           
                      p.id_servicio NOT IN(3, 4, 8, 9)
                    AND 
                      p.status =  0";

      $result =  $this->db->query($query_get);
      $response  =  $result->result_array();
      return $response;
  }
  
  function get_num_proyectos_pendientes($param){

    $query_get = "SELECT 
                    sum(case when p.status  = 1 then 1 else 0 end )publicos,
                    sum(case when p.status  = 0 then 1 else 0 end )privados , 
                    sum(case when p.status  = 2 then 1 else 0 end )muestras  
                    
                  FROM 
                  proyecto p
                  INNER JOIN
                  servicio s 
                  ON 
                  p.id_servicio = s.id_servicio                  
                  WHERE           
                  p.id_servicio NOT IN(3, 4, 8, 9)";


      $result =  $this->db->query($query_get);
      $response  =  $result->result_array();
      $data["publicos"] =  $response[0]["publicos"];
      $data["privados"] =  $response[0]["privados"];
      $data["muestras"] =  $response[0]["muestras"];
      return $data;

  }
  
  function registrar_abono_pago_vencido($param){
    
    $id_proyecto_persona_forma_pago =  $param["id_proyecto_persona_forma_pago"];
    $saldo_cubierto =  $param["saldo_cubierto"];
    $monto_liquidado =   $param["monto_liquidado"];
    $nuevo_saldo_abonado =  $saldo_cubierto +  $monto_liquidado;    
    $id_usuario =  $param["id_usuario"];


    $query_insert ="UPDATE proyecto_persona_forma_pago 
                    SET 
                      saldo_cubierto =  $nuevo_saldo_abonado
                    WHERE 
                      id_proyecto_persona_forma_pago = '$id_proyecto_persona_forma_pago' 
                    LIMIT 1 ";

    $this->db->query($query_insert);
    

    
    $query_insert ="INSERT INTO 
                    anticipo(
                        anticipo                          
                        ,id_proyecto_persona_forma_pago
                        ,id_usuario 
                      )
                    VALUES(
                      '".$monto_liquidado."'
                      ,'".$id_proyecto_persona_forma_pago."'
                      ,'".$id_usuario."'
                    );";
                        
    $this->db->query($query_insert);    
    return $this->modifica_estatus_venta($param);

    
    
  }  
  
  function modifica_estatus_venta($param){

    $id_proyecto_persona_forma_pago =  $param["id_proyecto_persona_forma_pago"];    
    $query_insert ="SELECT  
                      saldo_cubierto , monto_a_pagar
                    FROM 
                      proyecto_persona_forma_pago 
                    WHERE 
                      id_proyecto_persona_forma_pago = '$id_proyecto_persona_forma_pago' 
                    LIMIT 1 ";

    $result =  $this->db->query($query_insert);
    $data_saldos = $result->result_array()[0];
  
    $saldo_cubierto = $data_saldos["saldo_cubierto"];
    $monto_a_pagar =  $data_saldos["monto_a_pagar"];    
    if(floatval($saldo_cubierto) >= floatval($monto_a_pagar)) {
      $query_update ="UPDATE proyecto_persona_forma_pago 
                    SET 
                      status =  1
                    WHERE id_proyecto_persona_forma_pago = '$id_proyecto_persona_forma_pago' 
                    LIMIT 1 ";
                    $result =  $this->db->query($query_update);

    }
    return 1;

    
  }  
  
  function get_proyecto_persona_forma_pago($param){

    $id_proyecto_persona_forma_pago = $param["id_proyecto_persona_forma_pago"];    

    $query_get =  "SELECT * 
                    FROM 
                      proyecto_persona_forma_pago 
                    WHERE 
                      id_proyecto_persona_forma_pago = '$id_proyecto_persona_forma_pago' 
                    LIMIT 1 ";

    $result =  $this->db->query($query_get);
    return $result->result_array();


  }
  
  function get_historia_anticipos($param){

    
    $id_proyecto_persona_forma_pago = $param["id_proyecto_persona_forma_pago"];    
    $query_get ="select 
                    a.* ,
                  concat(u.nombre  , ' ' , u.apellido_paterno)usuario_validacion,
                    u.email
                  from 
                    anticipo a
                  left outer join
                    usuario u 
                  on 
                    a.id_usuario =  u.idusuario
                  where 
                    a.id_proyecto_persona_forma_pago  = '".$id_proyecto_persona_forma_pago."' 
                  order by 
                  a.fecha_registro desc";
    
    $result =  $this->db->query($query_get);
    return $result->result_array();

  }
  */  
}